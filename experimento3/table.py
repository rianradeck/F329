import numpy as np

label = "tab:resisitor"
table_title = "Valores coletados com o resistor e a resistência calculada com a derivada numérica"
NCOLS = 2

X = [0.498, 1.005, 1.502, 1.966, 2.508, 3.004, 3.505, 4.013, 4.507, 5.073, 5.512, 6.000]
uX = [0.000920748970494492, 0.0014762064275251844, 0.0019001762198982144, 0.002298158755757893, 0.0027644555823284032, 0.003191970968957373, 0.003624284124715758, 0.004062978392345529, 0.004489816635082848, 0.004979072545832876, 0.005358663514969629, 0.0057807150653415434]
Y = [-4.99, -9.92, -15.13, -19.73, -25.30, -31.05, -35.21, -40.29, -45.19, -50.80, -55.31, -60.2]
uY = np.array([7.115900622315259e-06, 1.4231713412891179e-05, 2.175169054732682e-05, 2.8391214163305294e-05, 3.6430813423071774e-05, 4.473022142057128e-05, 5.0734663117701556e-05, 5.806701049936472e-05, 6.513955051784336e-05, 7.323688733600485e-05, 7.97465111567062e-05, 8.680461777271224e-05]) * 1e3

# X = [0.504, 0.521, 0.550, 0.573, 0.600, 0.624, 0.650, 0.673, 0.701, 0.724, 0.749]
# uX = [0.0009311362234746681, 0.000960567367063168, 0.001010775280003754, 0.0010505968145138585, 0.0010973452814254346, 0.0011544256869399031, 0.0011762404799473053, 0.001195559875818299, 0.0012191051704699915, 0.0012384662557642283, 0.0012595306334768784]
# Y = [-0.22, -0.31, -0.59, -0.90, -1.65, -2.67, -4.75, -7.92, -15.14, -25.96, -48.08]
# uY = np.array([0.00031745604682643344, 0.0004473598570129719, 0.0008515050450036493, 0.0012989515034570512, 0.0023814832580417887, 0.0038537264444084944, 0.006855947844147202, 0.011431448727450663, 0.021852621086306027, 0.03746994586787745, 0.06939741575405865])


Z = [99.73118150556104, 99.73118150554683, 99.73118150557525, 99.73118150557525, 99.73118150554683, 99.73118150554683, 99.73118150554683, 99.73118150560367, 99.73118150560367, 99.73118150560367, 99.73118150560367, 99.73118150560367]
uZ = [0.00021738095238095238, 0.0007388867101912955, 0.0017972885609212948, 0.003703101447157581, 0.007702226007226259, 0.014610427839463432, 0.028338190223581566, 0.05399605020062935, 0.10355843014329626, 0.19765730643003793, 0.38515353805073427]

Y = list(map(abs, Y))
n = len(X)

X = [(str(X[i]) + "," + str(uX[i])) for i in range(n)]
Y = [(str(Y[i]) + "," + str(uY[i])) for i in range(n)]
Z = [(str(Z[i]) + "," + str(uY[i]*1e-3 / uX[i])) for i in range(n)]
# Z = [(str(Z[i]) + "," + str(uZ[i])) for i in range(n)]
table = []
for i in range(n):
	table.append(X[i])
	table.append(Y[i])
	# table.append(Z[i])
table = np.array(table).reshape(n, NCOLS)
# table = np.array([[(1, 3), (2, 0)], [(3, 2), (4, 1)], [(5, 4), (6, 5)]])


row, col = table.shape

print("\\begin{table}[H]")
print("\\label{tab:A}")
print("\\large")
print("\\begin{center}")
print("\\begin{tabular}{" + "|c" * NCOLS + "|}")

for i in range(row):
	print("\\hline")
	for j in range(col):
		decimal = (3 if j == 0 else 2)
		a, b = table[i][j].split(",")
		s = "{:." + str(decimal) + "f}"
		print(s.format(np.round(float(a), decimal)) + " $\\pm$ " + s.format(np.round(float(b), decimal)), end=(" & " if j != col-1 else " \\\\"))
	print()
print("\\hline")
print("\\end{tabular}")
print("\\end{center}")
print("\\caption{\\label{" + label + "}" + table_title + "}")
print("\\end{table}")